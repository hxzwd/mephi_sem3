Оформление

Поля - 2 см
Шрифт - 12
Междустрочный интервал - 1.5
Материалы - Последних трех лет

Тема

Обзор и анализ современных CASE-средств

Комментарии

CASE-средства проектирования баз данных
CASE-средства проектирования системного и прикладного ПО
CASE-средства сопровождения и реинжиниринга
Документаторы
CASE-средства программирования




Непрерывное развитие человечества, новые открытия и инновации в разных
сферах жизни человека, приводят к тому, что мир вокруг нас стремительно
меняется и чаще всего эти изменения направлены в сторону усложнения. Так
появляющиеся новые автомобили, компьютеры и машины имеют все более 
сложное устройство, большое число компонентов связанных нетривиальным образом.
Подобные изменения не обошли стороной и область, связанную с программным обеспечением,
а имменно все те процессы, будь то проектирование, сопровождение или непосредственно
программирование, связанные с разработкой программного обеспечения.

Разработка программного обеспечения является инженерной дисциплиной. Как и
прочие инженерные дисциплины, программная инженерия сталкивается с некоторыми
фундаментальными проблемами, такими как: уменьшение стоимости разработки
программного обеспечения, при совместном увеличении его качества и надёжности.

Учитывая сложность некоторых программных продуктов, которые содержат огромное
количество строк исходного кода, а также учитывая то, что программное обеспечение
функционирует во многих критических местах, например, программа автопилота самолета,
где ошибки в программном обеспечении могут стать причиной катастрофы, вопрос того,
как разрабатывать качественные и надежные сложные программные продукты, сводя
к минимуму количество возможных ошибок, становится важным и актуальным.

Возникновение ошибок обусловлено сложностью и трудоемкостью подпроцессов
процесса разработки программного обеспечения. Так естественным образом в качестве
решения проблемы выступает полная или частичная автоматизация всех или некоторых
подпроцессов. Для выполнения этой задачи были разработаны 
средства автоматизации разработки программ или CASE-средства.


CASE-средства с помощью соответствующих инструментов позволяют проводить
проектирование, документирование и анализ программных продуктов и интерфейсов.
Кроме того, CASE-средства позволяют производить программный код на каком-либо
языке программирования, то есть осуществлять кодогенерацию.


Идеалогия CASE-средств направлена на разделение подпроцесса проектирования
программного продукта от непсредственного кодирования и следующих за ним
этапов разработки. Для того, чтобы осуществить это разделение при 
проектировании используются два подхода: структурный и объектно-ориентированный.

Оба этих подхода предоставляют в распоряжение разработчиков набор строгих
и формализованных методов, позволяющих описать разрабатываемую систему
и различные технические решения, так или иначе касающиеся системы и возникающие
на протяжении всего времени разработки и дальнейшего сопровождения.
Упомянутые выше формализованные методы основаны на графических техниках
представления, так как различные диаграммы и схемы, что делает их весьма
наглядными и удобными.

Объектно-ориентированный подход базируется на использовании специального
унифицированного языка моделирования - UML. С помощью этого средства
можно визуально, графическим образом, описать и документировать
объектно-ориентированную систему, создав её абстрактную модель, называемую
UML-моделью. При этом UML сам по себе не является языком программирования,
однако на основе UML-модели может быть сгенерирован программный код.

Структурный подход базируется на многоуровневое разбиении задачи, которую
призвано выполнять создаваемое программное обеспечение. Так рассматриваемая
задача разбивается на набор функций, решающих эту задачу. В свою очередь
выделенные функции могут быть разбиты на ещё более мелкие функции -
подфункции. Результатом некоторого количества таких разбиений будет
являться упорядоченная иерархия функций и информации, передаваемой
из функции в функцию.


Большое количество выполняемых CASE-средствами задач приводит к тому, что
сложно уместить весь функционал в рамках одной конкретной CASE-системы
и порой рационально создание CASE-системы, степень интегрированности
которой по выполняемым функциям - невелика. Такие CASE-системы называются
CASE-инструментами, они ориентированы на работу в рамках какого-либо одного этапа
жизненного цикла программного обеспечения и решают локальные автономные задачи
в рамках задачи разработки программного обеспечения.


В качестве примеров типичных CASE-инструментов можно привести следующие
инструметы:

Инструменты управления конфигурацией
Инструменты моделирования данных
Инструменты анализа и проектирования
Инструменты преобразования моделей
Инструменты редактирования программного кода
Инструменты рефакторинга кода
Генераторы кода
Инструменты для построения UML-диаграмм


Помимо CASE-инструментов существуют крупные частично интегрированные и 
полностью интегрированные CASE-системы, функционал которых соответственно 
захватывает большую часть этапов жизненного цикла программного обеспечения
или весь жизенный цикл целиком.

Крупные реализации интегрированных и частично интегрированных CASE-систем
представляют из себя многокомпонентное программное обеспечение, в котором
отдельные компоненты функционально ориентированы на отдельные этапы жизненного
цикла разработки программного обеспечения. Связь между отдельными компонентами
крупной интегрированной или частично интегрированной CASE-системы осуществляется
через общий репозиторий

Среди компонент крупных интегрированных CASE-систем, осуществляя
классификацию на основе функциональной ориентации компонент, можно
выделить следующие типы:

Средства анализа модели
Средства проектирования баз данных
Средства разработки приложений
Средства реинжиниринга процессов
Средства планирования и управления проектом
Средства тестирования
Средства документирования







